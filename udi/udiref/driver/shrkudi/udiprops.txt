properties_version 0x101

message 1 SCO
message 2 udidk@sco.com
message 3 shrkudi Network Driver
message 5 DEC 21140-based card (Osicom, Matrox)
message 6 DEC 21143-based card (Interphase, Kingston, NI)

supplier 1
contact 2
name 3
shortname shrkudi

release 3 1.01

module shrkudi
region 0
region 1 priority hi
pio_serialization_limit 0 # We use only a single serialization domain.

requires udi 0x101
requires udi_physio 0x101
requires udi_bridge 0x101
requires udi_gio 0x101
requires udi_nic 0x101

meta 1 udi_nic
meta 2 udi_gio
meta 3 udi_bridge

child_bind_ops 1 0 3  # nic meta bind for primary region control channel
internal_bind_ops 2 1 1 2 0 # gio meta bind for primary-secondary region channel
parent_bind_ops 3 1 4  1 # bus meta bind for secondary region control channel

# Note that *_META definitions below must match 'meta n' declarations above
# and the SHRK_RX_REGION definition must match the region declaration above.
compile_options \
	-DSHRK_NIC_META=1 \
	-DSHRK_GIO_META=2 \
	-DSHRK_BUS_META=3 \
	-DSHRK_RX_REGION=1 \
#	-DSHRK_DEBUG 
#	-DSHRK_RING_SIZE=16 \
#	-DSHRK_PIO_DEBUG \
#	-DSHRK_MII_DEBUG \

source_files shrkudi.c
source_files shrk.h

## POSIX TEST FRAME START
#message 6 Posix Test Shark Driver
#device 6 3 \
#	bus_type 	string pci \
#	pci_vendor_id	ubit32 0x1234 \
#	pci_device_id	ubit32 0x1234
## POSIX TEST FRAME END

device 5 3 bus_type string pci pci_vendor_id ubit32 0x1011 pci_device_id ubit32 0x0009
device 6 3 bus_type string pci pci_vendor_id ubit32 0x1011 pci_device_id ubit32 0x0019

# log messages 
message 100 %s: event %p
message 200 %s: status != UDI_OK
message 300 %s: link down
message 301 %s: link up %dM %s
message 400 receive error; status 0x%x

# custom parameters
message 1000 Basic

message 1100 Link Speed
message 1101 Link Speed
message 1110 Autonegotiate
message 1111 Force_10_Mbit/sec
message 1112 Force_100_Mbit/sec

custom %link_speed device 1100 1101 1000 string 1110 mutex 1110 1111 1112 end 0

message 1200 Link Duplex Mode
message 1201 Link Duplex Mode
message 1210 Autonegotiate
message 1211 Force_Half-Duplex
message 1212 Force_Full-Duplex

custom %duplex_mode device 1200 1201 1000 string 1210 mutex 1210 1211 1212 end 0

message 1300 Transmit Buffers
message 1301 Transmit Buffers
message 1302 Receive Buffers
message 1303 Receive Buffers

custom %tx_buffers device 1300 1301 1000 ubit32 64 mutex 16 32 64 128 256 512 1024 2048 end 0
custom %rx_buffers device 1302 1303 1000 ubit32 64 mutex 16 32 64 128 256 512 1024 2048 end 0
