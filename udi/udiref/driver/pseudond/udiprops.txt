properties_version 0x101

message 1 Project UDI
message 2 http://www.project-UDI.org/participants.html
message 3 UDI Pseudo-Network-Driver
message 4 Generic UDI Pseudo-Network-Driver
message 5 Network Interface Card
release 3 1.01

supplier	1
contact		2
name		3
shortname	pseudond

requires udi	 	0x101
requires udi_gio 	0x101
requires udi_nic 	0x101
requires udi_bridge	0x101

##
## Custom parameters (attributes)
##

message 10 Link Speed mbps
message 11 Link speed in megabits per second

message 20 CPU Saver
message 21 Sets optimal point of CPU/Adapter performance for this system

message 30 Long Parameter name
message 31 Used to test correct handling of long parameters

message 32 Bogus Boolean name
message 33 A bogus boolean attribute to test booleans in the bcfg file

message 100 Basic
message 200 Advanced

custom %link_speed device 10 11 100 \
	ubit32 100 mutex 0 4 10 16 100 end 0

custom %cpu_saver device 20 21 100 \
	ubit32 0x0600 range 0x0000 0xC000 0x0600 0

custom %utterly_specious_parameter device 30 31 200 \
	ubit32 0x0006 range 0x0001 0xFFFF 0x0001 0

custom %bogus_boolean device 32 33 200 \
	boolean T mutex F T end 0

#
# Build instructions.
#
# NOTE: The parent_meta values must correspond to ND_NSR_META and ND_GIO_META
#	for the driver to successfully configure itself. Changing the 
#	parent_meta declarations will require the compile_option to be updated.
#
#	The Pseudo NIC can be made to appear as any media type and speed by
#	changing the __PSEUDOND_MEDIA_TYPE and __PSEUDOND_MEDIA_SPEED settings
#	in the compile_options line. The Pseudo NIC will appear as a 16Mbps 
#	Token-Ring NIC using the shown settings. With no values specified, the
#	NIC appears as a 10Mbps Ethernet adapter.
#
module pseudond
compile_options -DND_NSR_META=1 \
		-DND_GIO_META=2 \
		-DND_BRIDGE_META=3
#		-D__PSEUDOND_MEDIA_TYPE=1 -D__PSEUDOND_MEDIA_SPEED=16000000
source_files pseudond.c pseudond.h

region 0

##
## Metalanguage usage
##

meta 1 udi_nic			# Network Metalanguage
meta 2 udi_gio			# Generic I/O Metalanguage
meta 3 udi_bridge		# Bus Bridge Metalanguage

child_bind_ops 1 0 2		# NIC meta, primary region, ops_index 2
parent_bind_ops 3 0 5 11	# Bridge meta, primary region, ops_index 5
				# bus bind idx 11


##
## Describe Supported Devices
##

# Posix test-frame harness device definitions to match the posix_bridge mapper
# enumeration results

message 7 Posix Test Pseudo Net device
## POSIX TEST FRAME START
#device 7 3 \
#	bus_type	string pci \
#	pci_vendor_id	ubit32 0x1234 \
#	pci_device_id	ubit32 0x1234 \
#	pci_revision_id	ubit32 0x12 \
#	pci_base_class	ubit32 0x12 \
#	pci_sub_class	ubit32 0x12 \
#	pci_subsystem_vendor_id	ubit32 0x1234 \
#	pci_subsystem_id	ubit32 0x1234 \
#	pci_unit_address	ubit32 0x1234 \
#	pci_slot		ubit32 0x12
## POSIX TEST FRAME END

device 4 3 \
	bus_type	string pci \
	pci_vendor_id	ubit32 0x1179 \
	pci_device_id	ubit32 0x0407

device 4 3 \
	bus_type	string pci \
	pci_vendor_id	ubit32 0x8086 \
	pci_device_id	ubit32 0x7110

message 8 Pseudo Interphase NIC
device 8 3 \
	bus_type	string pci \
	pci_vendor_id	ubit32 0x1011 \
	pci_device_id	ubit32 0x0019

message 9 Pseudo Shark NIC
device 9 3 \
	bus_type	string pci \
	pci_vendor_id	ubit32 0x1011 \
	pci_device_id	ubit32 0x0009
