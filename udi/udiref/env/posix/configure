#!/bin/sh
# File: env/posix/configure
#
# USAGE: ./configure
#
# Prepares the current POSIX build directory as appropriate for
# building the user-space POSIX test frameworks under the current
# environment.
#
# By default, POSIX builds the user-space POSIX test framework for
# the current environment.  All object files, etc produced are for
# this current environment.  If multiple environments will be used in
# the same "tree" simultaneously then the posix directory should be
# replicated to companion directories, one for each different
# environment being tested.
#

#
# $Copyright udi_reference:
# 
# 
#    Copyright (c) 1995-2001; Compaq Computer Corporation; Hewlett-Packard
#    Company; Interphase Corporation; The Santa Cruz Operation, Inc;
#    Software Technologies Group, Inc; and Sun Microsystems, Inc
#    (collectively, the "Copyright Holders").  All rights reserved.
# 
#    Redistribution and use in source and binary forms, with or without
#    modification, are permitted provided that the conditions are met:
# 
#            Redistributions of source code must retain the above
#            copyright notice, this list of conditions and the following
#            disclaimer.
# 
#            Redistributions in binary form must reproduce the above
#            copyright notice, this list of conditions and the following
#            disclaimers in the documentation and/or other materials
#            provided with the distribution.
# 
#            Neither the name of Project UDI nor the names of its
#            contributors may be used to endorse or promote products
#            derived from this software without specific prior written
#            permission.
# 
#    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#    "AS IS," AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#    A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#    HOLDERS OR ANY CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#    INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
#    BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
#    OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
#    ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
#    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
#    USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
#    DAMAGE.
# 
#    THIS SOFTWARE IS BASED ON SOURCE CODE PROVIDED AS A SAMPLE REFERENCE
#    IMPLEMENTATION FOR VERSION 1.01 OF THE UDI CORE SPECIFICATION AND/OR
#    RELATED UDI SPECIFICATIONS. USE OF THIS SOFTWARE DOES NOT IN AND OF
#    ITSELF CONSTITUTE CONFORMANCE WITH THIS OR ANY OTHER VERSION OF ANY
#    UDI SPECIFICATION.
# 
# 
# $
#

OSNAME=`/bin/sh ../common/Make_conf -n`-user
SRCDIR=`dirname $0`
CFGDIR=`pwd`

get_root()
{
	cwd=`pwd`
	cd ..
	ROOT_DIR=`dirname \`pwd\``
	cd $cwd
}

get_root
echo "Root of Tree = ${ROOT_DIR}"
echo "Configuring for ${OSNAME}"
echo "Source is in ${SRCDIR}"
echo "Config-dir is ${CFGDIR}"

rm -f osenvdir
rm -f mappers

ln -s ${ROOT_DIR}/env/${OSNAME} ./osenvdir
ln -s ${ROOT_DIR}/mapper/${OSNAME} ./mappers

if [ ! -f ../${OSNAME}/udiget ] ; then
    ln -s `pwd`/udiget ../${OSNAME}/udiget
fi

# The above are all that are strictly required to perform builds.  However,
# for debugging purposes it would be nice to find all source files that might
# be stepped through.  Many of the os-specific portions of the UDI POSIX tests
# are compiled with envcommon references; by supplying envcommon, we facilitate
# source level debugging.

rm -f ./envcommon
ln -s ../common ./envcommon


touch depend.mk
echo "Recommended: $ make depend"

exit 0
    #-----------------------OLD STUFF BELOW-----------------------------------
if [ ! -f Makefile ] ; 
then
	ln -s ${SRCDIR}/Makefile Makefile
fi

rm -f udi_osdep.c real_osdep.h udi_osdep.mk udi_sprops.c sprops.h depend.mk \
	giomap.c netmap.c bridgemap.c udibuild.sh
ln -s ../${OSNAME}stub/udi_osdep.c udi_osdep.c
ln -s ../${OSNAME}stub/udi_osdep.h real_osdep.h
ln -s ../${OSNAME}stub/udi_osdep.mk udi_osdep.mk
ln -s ../${OSNAME}stub/udibuild.sh udibuild.sh
ln -s ../${OSNAME}stub/depend.mk depend.mk
[ -f ../${OSNAME}stub/udi_sprops.c ] && ln -s ../${OSNAME}stub/udi_sprops.c udi_sprops.c || ln -s ../${OSNAME}/udi_sprops.c udi_sprops.c
ln -s ../../mapper/common/gio/giomap.c giomap.c
ln -s ../../mapper/common/net/netmap.c netmap.c
ln -s ../../mapper/common/bridge/udi_bridge.c bridgemap.c

# This is required, due to directory renaming
[ -h netmap ] || {
	ln -s netmap_posix netmap
}

touch depend.mk
echo "Recommended: $ make depend"

